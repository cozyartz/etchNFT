#!/usr/bin/env node

/**
 * RBAC Migration Script
 * Applies the role-based access control migration to the database
 */

import { readFileSync } from "fs";
import { join } from "path";
import { fileURLToPath } from "url";

const __dirname = fileURLToPath(new URL(".", import.meta.url));

async function runMigration() {
  console.log("üîÑ Running RBAC Migration...");

  try {
    // Read the migration file
    const migrationPath = join(__dirname, "../migrations/003_rbac_system.sql");
    const migrationSQL = readFileSync(migrationPath, "utf8");

    // Note: This is a template - you'll need to adapt this for your specific database setup
    // For Cloudflare D1, you would typically run this via wrangler d1 execute

    console.log("üìã Migration SQL loaded successfully");
    console.log("üí° To apply this migration, run:");
    console.log(
      "   npx wrangler d1 execute DB --file=migrations/003_rbac_system.sql",
    );
    console.log("");
    console.log("üìù Migration includes:");
    console.log("   ‚úì roles table - Store role definitions");
    console.log("   ‚úì permissions table - Store permission definitions");
    console.log("   ‚úì role_permissions table - Link roles to permissions");
    console.log("   ‚úì user_roles table - Assign roles to users");
    console.log("   ‚úì audit_logs table - Track admin actions");
    console.log("   ‚úì Default roles and permissions");
    console.log("   ‚úì Migration of existing admin users");
    console.log("");
    console.log(
      "‚ö†Ô∏è  Important: After running the migration, existing admin users will be",
    );
    console.log(
      '   automatically assigned the "Super Admin" role based on their email/GitHub ID',
    );
    console.log("");
    console.log("üîê Default roles created:");
    console.log("   ‚Ä¢ Super Admin - Full system access");
    console.log("   ‚Ä¢ Admin - Standard admin access");
    console.log("   ‚Ä¢ Content Manager - Manage drops and templates");
    console.log("   ‚Ä¢ Support - View orders and assist customers");
    console.log("   ‚Ä¢ Viewer - Read-only access");
  } catch (error) {
    console.error("‚ùå Error reading migration file:", error);
    process.exit(1);
  }
}

runMigration();
